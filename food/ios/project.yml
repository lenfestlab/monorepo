name: project

include:
  - project-secrets.yml
  - project-deps.yml

options:
  deploymentTarget: # IPHONEOS_DEPLOYMENT_TARGET
    iOS: 12.0
  createIntermediateGroups: true
  defaultConfig: dev-debug

configs:
  dev-debug: debug
  test-debug: debug
  stag-debug: debug
  prod-debug: debug
  prod-release: release
  # NOTE: configs required for all permutations of configVariants, else:
  # https://gist.github.com/brenthargrave/ce351b24aa3fdee31d127f1c95b7470a
  x-dev-release: release
  x-test-release: release
  x-stag-release: release

settings:
  base:
    APP_NAME: Philly Eats
    APP_MARKETING_PATH: food
    TARGETED_DEVICE_FAMILY: '1' # iPhone only
    # link system frameworks - https://git.io/fAZbC
    # -ObjC required by crashlytics: https://git.io/fAQPW
    OTHER_LDFLAGS: "$(inherited) -framework Foundation -ObjC -lsqlite3.0"
    # Override to ensure dSYm, enable forced crashes:
    # See "Adjust your project's debug settings": https://goo.gl/ZRLPwG
    # ...else build warning:
    # > -1: DEBUG_INFORMATION_FORMAT should be set to dwarf-with-dsym for all
    # > configurations. This could also be a timing issue, make sure the
    # > Fabric run script build phase is the last build phase and no other
    # > scripts have moved the dSYM from the location Xcode generated it.
    # > Unable to process Here.app.dSYM at path...
    DEBUG_INFORMATION_FORMAT: "dwarf-with-dsym"
    APP_VERSION: 1.0.0
  configs:
    # > Each key will be matched to any configs that contain the key and
    # > is case insensitive. So if you had Staging Debug and Staging Release,
    # > you could apply settings to both of them using staging.
    # https://git.io/fA1iI
    test:
      ENV_NAME: test
      APP_NAME_SUFFIX: "-test"
      BUNDLE_ID_SUFFIX: .test
    dev:
      ENV_NAME: dev
      APP_NAME_SUFFIX: "-dev"
      BUNDLE_ID_SUFFIX: .dev
    stag:
      ENV_NAME: stag
      APP_NAME_SUFFIX: "-stag"
      BUNDLE_ID_SUFFIX: .stag
    prod:
      ENV_NAME: prod
      BUNDLE_ID_SUFFIX: .prod

targets:

  App:
    type: application
    platform: iOS
    sources:
      - path: App
        name: App
    settings:
      PRODUCT_NAME: $(APP_NAME)$(APP_NAME_SUFFIX)
      PRODUCT_MODULE_NAME: App
      PRODUCT_BUNDLE_IDENTIFIER: $(BUNDLE_ID_PREFIX)$(BUNDLE_ID_SUFFIX)
      INFOPLIST_FILE: App/Info.plist
      TARGETED_DEVICE_FAMILY: "$(inherited)"
      CODE_SIGN_ENTITLEMENTS: App/App.entitlements
    scheme:
      testTargets:
        - Tests
      configVariants:
        - dev
        - test
        - stag
        - prod
    dependencies: [] # ./deps.yml
    prebuildScripts:
      - name: Copy Firebase config
        path: scripts/copy_firebase_config.sh
    postbuildScripts:
      - name: "Bump build number"
        path: scripts/update_build_number.sh

  Tests:
    platform: iOS
    type: bundle.unit-test
    sources:
      - Tests/Support
    settings:
      TARGETED_DEVICE_FAMILY: "$(inherited)"
      LD_RUNPATH_SEARCH_PATHS:
        - "$(inherited)"
        - "@executable_path/Frameworks"
        - "@loader_path/Frameworks"
        # additional path required for unit tests to run:
        # https://github.com/Carthage/Carthage/issues/1002#issue-122848182
        - "$(PROJECT_DIR)/Carthage/Build/iOS"
      # required to test App API directly: https://git.io/fN75s
      TEST_HOST: "$(BUILT_PRODUCTS_DIR)/$(APP_NAME) dev.app/$(APP_NAME) dev"
    dependencies:
      - target: App

  NotificationService:
    platform: iOS
    type: app-extension
    sources:
      Extension/Notification
    settings:
      PRODUCT_BUNDLE_IDENTIFIER: $(BUNDLE_ID_PREFIX)$(BUNDLE_ID_SUFFIX).notification-service
      TARGETED_DEVICE_FAMILY: "$(inherited)"
      # extension code signing not automatically set like in App target:
      # https://git.io/fjYBY
      CODE_SIGN_IDENTITY: iPhone Developer
    postbuildScripts:
      - name: "Bump build number"
        path: scripts/update_build_number.sh
    info:
      path: Extension/Notification/Service/Info.plist
      properties:
        CFBundleDisplayName: notification-service
        CFBundleVersion: "(Set automatically in custom Build Phases script)"
        CFBundleShortVersionString: "$(APP_VERSION)"
        NSExtension:
          NSExtensionPointIdentifier: com.apple.usernotifications.service
          NSExtensionPrincipalClass: $(PRODUCT_MODULE_NAME).NotificationService
    dependencies:
      - target: Shared

  Shared:
    platform: iOS
    type: framework
    sources: Shared
    settings:
      PRODUCT_BUNDLE_IDENTIFIER: $(BUNDLE_ID_PREFIX)$(BUNDLE_ID_SUFFIX).shared
      CODE_SIGN_IDENTITY: iPhone Developer
      APPLICATION_EXTENSION_API_ONLY: true
    postbuildScripts:
      - name: "Bump build number"
        path: scripts/update_build_number.sh
    info:
      path: Shared/Info.plist
      properties:
        CFBundleVersion: "(Set automatically in custom Build Phases script)"
        CFBundleShortVersionString: "$(APP_VERSION)"

